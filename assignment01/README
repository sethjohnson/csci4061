/* login: joh08230
 * date:  09/30/12
 * name:  Seth Johnson, Michael Walton
 * id:    4273042, id_for_second_name 
 */


csci4061
========
Seth and Michael's CSCI 4061 assignments

-Purpose of Assignment 1: Program-Graph Executor-

The purpose of this program is to correctly implement and execute a processes graph of terminal commands/programs read in by text file. The input and output of the commands will be from and to text files.

To that end, the program correctly implements fork(), execvp(), wait(), and output redirection.



-How to compile this program-

Included with the program is a make file.

It's recommended that you use the make file to build the program, the following command is used to compile the program from the terminal prompt.



make

--make will execute the first target in the makefile ... which is build all.



-How to use Assignment 1 from the terminal ... the proper syntax to evoke the program.

while at the terminal prompt follow this syntax < ProgramName SomeFile.txt >

Example :: graphexec textfile.txt

This will lunch graphexec with textfile.txt as the user entered input.



-Overview of what this program does-

This program takes as input a text file entered by the user at the terminal prompt.  It then reads this file line by line  parsing out information(colon delimited)

following this convention < program name with arguments:list of children ID's:input file:output file >

With this information the program creates a node(data structure) for every valid line.

The Program then analyzes each node, and determines node parents. Using this info the Program determines and sets eligibility for execution.

Thereby a node tree is created, based on the required parent/children structure.

Finally the program executes ready node(s), and updates the status of each node upon execution for the subsequent child node(s)  in order to create the required parent/child run order.

